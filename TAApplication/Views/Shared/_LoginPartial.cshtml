<!--
  Author:    Ashton Foulger
  Partner:   Kyle Charlton
  Date:      9/27/22
  Course:    CS 4540, University of Utah, School of Computing
  Copyright: CS 4540 and Ashton Foulger, Kyle Charlton - This work may not be copied for use in Academic Coursework.

  We, Ashton Foulger, and Kyle Charlton, certify that we wrote this code from scratch and did not copy it in part or whole from
  another source.  Any references used in the completion of the assignment are cited in my README file.

  File Contents
    Login NavBar Element HTML.
-->
@using Microsoft.AspNetCore.Identity
@using TAApplication.Data
@inject SignInManager<TAUser> SignInManager
@inject UserManager<TAUser> UserManager

@{
    TAUser currentUser = await UserManager.GetUserAsync(User);
    if (currentUser != null)
        await SignInManager.RefreshSignInAsync(currentUser);
}

<ul class="navbar-nav">
    @if (currentUser != null && SignInManager.IsSignedIn(User))
    {
        @*var currentUser = UserManager.GetUserAsync(User)?.Result?.Name;
        string displayName = (currentUser is null || currentUser.Result is null) ? "" : currentUser.Result.Name;*@
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Welcome @currentUser.Name!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-white">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
